@implements IDisposable


@inject IWebHostEnvironment _Environment
@inject NavigationManager _NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">TrackYourTrip</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (_Environment.IsDevelopment())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="about" Match="NavLinkMatch.All">
                    <span class="bi bi-info-circle custom-icon" aria-hidden="true"></span> About
                </NavLink>
            </div>
        }
        

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="trip" Match="NavLinkMatch.All">
                <span class="bi bi-car-front-fill custom-icon" aria-hidden="true"></span> Trips
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="jobPost" Match="NavLinkMatch.All">
                <span class="bi bi-car-front-fill custom-icon" aria-hidden="true"></span> Job Post
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="company" Match="NavLinkMatch.All">
                <span class="bi bi-car-front-fill custom-icon" aria-hidden="true"></span> Company
            </NavLink>
        </div>

        @if (_Environment.IsDevelopment())
        {
            <AuthorizeView Roles="@StaticDetails.RoleAdmin">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="trip-radzen" Match="NavLinkMatch.All">
                        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Trip-Radzen
                    </NavLink>
                </div>
            </AuthorizeView>
        }
                

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = _NavigationManager.ToBaseRelativePath(_NavigationManager.Uri);
        _NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = _NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        _NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

